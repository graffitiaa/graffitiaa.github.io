<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Music I Love Forever</title>
    <link href="/2022/12/05/bands/"/>
    <url>/2022/12/05/bands/</url>
    
    <content type="html"><![CDATA[<p>hey you !! WELCOME<br><strong>my first blog here</strong><br>以下是我个人很喜爱的一些乐队，分享给你 :)  </p><h1 id="the-beatles"><a href="#the-beatles" class="headerlink" title="the beatles"></a>the beatles</h1><p><em>four boys from Liverpool</em><br><strong>a genius band</strong><br><strong>享誉世界，披头士就不多介绍了</strong><br><img src="https://ts1.cn.mm.bing.net/th/id/R-C.83d48419f33784c40d6e09202bec6bd6?rik=KYjgDeOLeFWFYQ&riu=http://img.fotomen.cn/2010/12/beatles-abbey-road-by-maxi-posters.jpg&ehk=0ehmz50cqUQAqgskqsyLKnrBNblvSVguqZvA3spp/2c=&risl=&pid=ImgRaw&r=0">  </p><h2 id="hey-jude"><a href="#hey-jude" class="headerlink" title="hey jude"></a>hey jude</h2><p>don’t carry the world upon your shouders   </p><h2 id="yesterday"><a href="#yesterday" class="headerlink" title="yesterday"></a>yesterday</h2><p>all my troubles seemed so far away~  </p><h2 id="let-it-be"><a href="#let-it-be" class="headerlink" title="let it be"></a>let it be</h2><p>when the night is cloudy , there is still a light that shines on me  </p><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p><a href="https://www.bilibili.com/video/BV1cR4y1H7om/?spm_id_from=333.337.search-card.all.click">bilibili hey jude</a>  </p><h1 id="pink-floyd"><a href="#pink-floyd" class="headerlink" title="pink floyd"></a>pink floyd</h1><p><strong>来自英国的摇滚乐队，以迷幻摇滚前卫摇滚为主，因哲学的歌词、音速实验、创新的专辑封面艺术与精致的现场表演闻名</strong><br><em>没错前段时间大火的怒怼CNN的“水爷”就是其核心成员</em><br><img src="https://wallsdesk.com/wp-content/uploads/2016/11/Pink-Floyd-Pictures.jpg">  </p><h2 id="High-hopes"><a href="#High-hopes" class="headerlink" title="High hopes"></a>High hopes</h2><p>这首歌讲述了一个普通人的人生起落，制作精良，MV拍摄也十分艺术（看不懂<br>Beyond the horizon of the place we lived when we were young<br>地平线之外 是我们儿时所栖<br>In a world of magnets and miracles<br>磁力与奇迹 遍及表里<br>Our thoughts strayed constantly and without boundary<br>我们的思绪飘如柳絮 漫无边际<br>The ringing of thr division bell had begun<br>不觉别离的钟声响起<br>Along the long road and on down the causeway<br>长路漫漫 兀自求索<br>Do they still meet there by the cut<br>苦痛交迫 他们是否还会在彼岸相逢<br>There was a ragged band that followed our footsteps<br>沿着我们的足印前进啊 褴褛众生<br>Running before time took our dreams away<br>在时间瓦解我们的幻梦之前 逐日飞奔<br>……</p><h2 id="友情链接-1"><a href="#友情链接-1" class="headerlink" title="友情链接"></a>友情链接</h2><p><a href="https://www.bilibili.com/video/BV1sE411W7qx/?spm_id_from=333.337.search-card.all.click&vd_source=cc4a584ba9b108a00c4382906af1f7c4">bilibili-high hopes</a>  </p><h1 id="伍佰-amp-China-Blue"><a href="#伍佰-amp-China-Blue" class="headerlink" title="伍佰&amp;China Blue"></a>伍佰&amp;China Blue</h1><p><strong>主唱和吉他手是伍佰老师，这大家熟悉</strong><br><img src="https://ts1.cn.mm.bing.net/th/id/R-C.3e4d5de8f2b34a152313c43c4b7b850c?rik=yJkO4s3lFGw0PQ&riu=http://p2.music.126.net/-1kwdoko0wgw58dSeb6QuQ==/109951165276123850.jpg&ehk=iicGvEFxcqYdoWxkd7e1S3XCxzUwnqvX72BPCmppf2g=&risl=&pid=ImgRaw&r=0">  </p><h2 id="泪桥"><a href="#泪桥" class="headerlink" title="泪桥"></a>泪桥</h2><p>就像站在烈日骄阳大桥上，眼泪狂奔滴落在我的脸庞  </p><h2 id="白鸽"><a href="#白鸽" class="headerlink" title="白鸽"></a>白鸽</h2><p>飞翔吧 飞在天空 用力吹吧 无情的风 我不会害怕 也无需懦弱 流浪的路 我自己走  </p><h2 id="挪威的森林"><a href="#挪威的森林" class="headerlink" title="挪威的森林"></a>挪威的森林</h2><p>那里湖面总是澄清，那里空气充满宁静，雪白明月照在大地  </p><h1 id="基诺乐队"><a href="#基诺乐队" class="headerlink" title="基诺乐队"></a>基诺乐队</h1><p><strong>来自武汉的一支英伦摇滚乐队，在国内知名度不该这么低</strong><br><img src="https://p1.ssl.qhimg.com/t01abfd8888b3b508ba.jpg">   </p><h2 id="从巴黎到伦敦"><a href="#从巴黎到伦敦" class="headerlink" title="从巴黎到伦敦"></a>从巴黎到伦敦</h2><p>轻易间点燃灵魂 你与我为他而狂奔 在每个深夜清晨 在每个午后黄昏   </p><h2 id="礼物"><a href="#礼物" class="headerlink" title="礼物"></a>礼物</h2><p>白驹过隙的旅途 流沙一样无法停驻 只留下你最后的舞步 黯淡地结束  </p>]]></content>
    
    
    <categories>
      
      <category>Others</category>
      
      <category>Music</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>双创大作业|成员介绍 :)</title>
    <link href="/2022/11/29/ShuangChuang/"/>
    <url>/2022/11/29/ShuangChuang/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center">班级</th><th align="center">学号</th><th align="center">姓名</th></tr></thead><tbody><tr><td align="center">2022211314</td><td align="center">2022211415</td><td align="center">刘佳婕</td></tr><tr><td align="center">2022211314</td><td align="center">2022211416</td><td align="center">冯雪莹</td></tr><tr><td align="center">2022211314</td><td align="center">2022211417</td><td align="center">李佳玉</td></tr><tr><td align="center">2022211314</td><td align="center">2022211418</td><td align="center">陈露</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Nothing</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一些经典的排序与查找(C)</title>
    <link href="/2022/11/26/sortNsearch/"/>
    <url>/2022/11/26/sortNsearch/</url>
    
    <content type="html"><![CDATA[<p><strong>介绍一些经典的数组排序与查找算法</strong>  </p><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><p>除以下外还有桶排序等经典排序算法，此处不做介绍。<br><em>排序以升序为例</em>  </p><h2 id="冒泡排序bubbleSort"><a href="#冒泡排序bubbleSort" class="headerlink" title="冒泡排序bubbleSort"></a>冒泡排序bubbleSort</h2><pre><code class="hljs">void bubbleSort(int a[],int n)&#123;    int pass,i,temp;    for(pass=1;pass&lt;n;pass++)        for(i=0;i&lt;(n-pass);i++)            if(a[i]&gt;a[i+1])            &#123;                temp=a[i];                a[i]=a[i+1];                a[i+1]=temp;            &#125;&#125;</code></pre><h2 id="选择排序selectSort"><a href="#选择排序selectSort" class="headerlink" title="选择排序selectSort"></a>选择排序selectSort</h2><pre><code class="hljs">void selectSortUp(int a[],int n)&#123;    int i,j,temp,min;    for(i=0;i&lt;(n-1);i++)    &#123;        min=findMin(a,i,n-1);        temp=a[min];        a[min]=a[i];        a[i]=temp;    &#125;&#125;int findMin(int a[], int startLoc, int endLoc)&#123;    int i,min=startLoc;    for(i=startLoc+1;i&lt;=endLoc;i++)        if(a[i]&lt;a[min])            min=i;    return min;&#125;</code></pre><h2 id="插入排序insertSort"><a href="#插入排序insertSort" class="headerlink" title="插入排序insertSort"></a>插入排序insertSort</h2><pre><code class="hljs">void insertSort(int a[],int size)&#123;    int i;    for(i=1;i&lt;size;i++)        insertElement(a,i+1,a[i]);&#125;void insertElement(int a[],int size,int num)&#123;    int i,j;    for(i=0;(a[i]&gt;num&amp;&amp;i&lt;size);i++);    for(j=size-2;j&gt;=i;j--)        a[j+1]=a[j];    a[i]=num;&#125;</code></pre><h1 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h1><p>除以下外还有分块查找等经典查找算法，此处不做介绍。  </p><h2 id="线性查找linearSearch"><a href="#线性查找linearSearch" class="headerlink" title="线性查找linearSearch"></a>线性查找linearSearch</h2><pre><code class="hljs">int linearSearch(int a[],int key,int size)&#123;    int i;    for(i=0;i&lt;size;i++)        if(a[i]==key)            return i;    return -1;&#125;</code></pre><p>或者<br>    int findElement(int a[],int startLoc,int endLoc,int element)<br>    {<br>        int i;<br>        for(i&#x3D;startLoc;i&lt;&#x3D;endLoc&amp;&amp;a[i]!&#x3D;element;i++);<br>        if(i&lt;&#x3D;endLoc)<br>            return i;<br>        else<br>            return -1;<br>    }</p><h2 id="折半查找binarySearch"><a href="#折半查找binarySearch" class="headerlink" title="折半查找binarySearch"></a>折半查找binarySearch</h2><h3 id="一般"><a href="#一般" class="headerlink" title="一般"></a>一般</h3><pre><code class="hljs">int binarySearch(int a[],int key,int left,int right)&#123;    int mid=(left+right)/2;    while(left&lt;=right&amp;&amp;a[mid]!=key)    &#123;        if(key&lt;a[mid])            right=mid-1;        else            left=mid+1;        mid=(left+right)/2;    &#125;    if(left&gt;right)        return -1;    else        return mid;&#125;</code></pre><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><pre><code class="hljs">int recurBinarySearch( int a[],int key,int left,int right)&#123;    int mid=(left+right)/2;    if(left&gt;right)        return -1;    else    &#123;        if(key==a[mid])            return mid;        if(key&lt;a[mid])             return RecurBinarySearch(a,key,left,mid-1);        if(key&gt;a[mid])            return RecurBinarySearch(a,key,mid+1,right);    &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>Algorithm</category>
      
      <category>C</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
